Description: Add Unity support to show file transfer progress in the launcher

=== modified file 'configure.ac'
---
 configure.ac             |   30 +++++++++++++++++++
 src/Makefile.am          |    3 +
 src/empathy-ft-manager.c |   71 +++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 104 insertions(+)

--- a/configure.ac
+++ b/configure.ac
@@ -78,6 +78,7 @@
 ISO_CODES_REQUIRED=0.35
 NAUTILUS_SENDTO_REQUIRED=2.90.0
 NETWORK_MANAGER_REQUIRED=0.7.0
+UNITY_REQUIRED=3.4.0
 CHAMPLAIN_REQUIRED=0.12.1
 CHEESE_GTK_REQUIRED=3.4.0
 LIBACCOUNTS_REQUIRED=1.4
@@ -336,6 +337,34 @@
 
 AM_CONDITIONAL(HAVE_ENCHANT, test "x$have_enchant" = "xyes")
 
+# libunity
+# -----------------------------------------------------------
+AC_ARG_ENABLE(libunity,
+               AS_HELP_STRING([--enable-libunity=@<:@no/yes/auto@:>@],
+                       [build libunity support]), ,
+                       enable_libunity=auto)
+
+if test "x$enable_unity" != "xno"; then
+   PKG_CHECK_MODULES(UNITY,
+   [
+     unity >= $UNITY_REQUIRED
+   ], have_unity="yes", have_unity="no")
+
+   if test "x$have_unity" = "xyes"; then
+      AC_DEFINE(HAVE_UNITY, 1, [Define if you have unity])
+   fi
+else
+   have_unity=no
+fi
+
+if test "x$enable_unity" = "xyes" -a "x$have_unity" != "xyes"; then
+   AC_MSG_ERROR([Could not find libunity.])
+fi
+
+AM_CONDITIONAL(HAVE_UNITY, test "x$have_unity" = "xyes")
+AC_SUBST([UNITY_CFLAGS])
+AC_SUBST([UNITY_LIBS])
+
 # -----------------------------------------------------------
 # Map view checks: libchamplain
 # -----------------------------------------------------------
@@ -622,6 +651,7 @@
 	Display maps (libchamplain).:  ${have_libchamplain}
 	Location awareness (Geoclue):  ${have_geoclue}
 	Geocode support (Geocode)...:  ${have_geocode}
+	Unity panel support (unity).:  ${have_unity}
 	Cheese webcam support ......:  ${have_cheese}
 	Camera monitoring...........:  ${have_gudev}
 
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -18,6 +18,7 @@
 AM_LDFLAGS = $(LIBM)
 AM_CPPFLAGS =						\
 	$(CPPFLAGS_COMMON)				\
+	$(UNITY_CFLAGS)					\
 	$(LIBCHAMPLAIN_CFLAGS)				\
 	$(UOA_CFLAGS)					\
 	$(NULL)
@@ -28,6 +29,7 @@
 	$(top_builddir)/extensions/libemp-extensions.la		\
 	$(GCR_LIBS) 						\
 	$(EMPATHY_LIBS)						\
+	$(UNITY_LIBS)						\
 	$(TPAW_LIBS)						\
 	$(LIBCHAMPLAIN_LIBS)					\
 	$(UOA_LIBS)						\
@@ -155,6 +157,7 @@
         $(top_builddir)/libempathy/libempathy.la			\
         $(top_builddir)/extensions/libemp-extensions.la			\
         $(EMPATHY_LIBS)							\
+	$(UNITY_LIBS)							\
         $(LIBCHAMPLAIN_LIBS)						\
 	$(NULL)
 
--- a/src/empathy-ft-manager.c
+++ b/src/empathy-ft-manager.c
@@ -40,6 +40,8 @@
 #define DEBUG_FLAG EMPATHY_DEBUG_FT
 #include "empathy-debug.h"
 
+#include <unity.h>
+
 enum
 {
   COL_PERCENT,
@@ -59,6 +61,7 @@
   GtkWidget *open_button;
   GtkWidget *abort_button;
   GtkWidget *clear_button;
+  UnityLauncherEntry *launcher;
 } EmpathyFTManagerPriv;
 
 enum
@@ -78,6 +81,53 @@
 static void ft_handler_hashing_started_cb (EmpathyFTHandler *handler,
     EmpathyFTManager *manager);
 
+static gchar * ft_manager_format_progress_bytes_and_percentage (
+                                                 guint64 current,
+                                                 guint64 total,
+                                                 gdouble speed,
+                                                 int *percentage);
+
+static void
+ft_update_unity_launcher (EmpathyFTManager *manager)
+{
+  EmpathyFTManagerPriv *priv;
+
+  priv = GET_PRIV (manager);
+  g_return_if_fail (priv->launcher != NULL);
+
+  guint64 current_bytes = 0;
+  guint64 total_bytes = 0;
+  int percentage;
+  gdouble progress;
+  GHashTableIter iter;
+  gpointer handler;
+
+  g_hash_table_iter_init (&iter, priv->ft_handler_to_row_ref);
+  while (g_hash_table_iter_next (&iter, &handler, NULL)) 
+  {
+      if (!empathy_ft_handler_is_completed (handler) &&
+          !empathy_ft_handler_is_cancelled (handler))
+      {
+          current_bytes = current_bytes + empathy_ft_handler_get_transferred_bytes (handler);
+          total_bytes = total_bytes + empathy_ft_handler_get_total_bytes (handler);
+      }
+  }
+  ft_manager_format_progress_bytes_and_percentage (current_bytes, total_bytes, -1, &percentage);
+
+  progress = percentage;
+  progress = progress / 100;
+
+  unity_launcher_entry_set_progress (priv->launcher, progress);
+  if (progress > 0 && progress < 100)
+  {
+    unity_launcher_entry_set_progress_visible (priv->launcher, TRUE);
+  } 
+  else 
+  {
+    unity_launcher_entry_set_progress_visible (priv->launcher, FALSE);
+  }
+}
+
 static gchar *
 ft_manager_format_interval (guint interval)
 {
@@ -387,6 +437,8 @@
       COL_PERCENT, percentage,
       -1);
 
+  ft_update_unity_launcher (manager);
+
   gtk_tree_path_free (path);
 
 }
@@ -453,6 +505,8 @@
   ft_manager_clear_handler_time (manager, row_ref);
   ft_manager_update_buttons (manager);
 
+  ft_update_unity_launcher (manager);
+
   g_free (message);
 }
 
@@ -460,6 +514,7 @@
 do_real_transfer_done (EmpathyFTManager *manager,
                        EmpathyFTHandler *handler)
 {
+  EmpathyFTManagerPriv *priv;
   const char *contact_name;
   const char *filename;
   char *first_line, *second_line, *message;
@@ -469,6 +524,8 @@
   GtkRecentManager *recent_manager;
   GFile *file;
 
+  priv = GET_PRIV (manager); 
+
   row_ref = ft_manager_get_row_from_handler (manager, handler);
   g_return_if_fail (row_ref != NULL);
 
@@ -494,6 +551,8 @@
   ft_manager_update_handler_message (manager, row_ref, message);
   ft_manager_clear_handler_time (manager, row_ref);
 
+  ft_update_unity_launcher (manager);
+
   /* update buttons */
   ft_manager_update_buttons (manager);
 
@@ -530,6 +589,8 @@
   DEBUG ("Transfer done, no hashing");
 
   do_real_transfer_done (manager, handler);
+
+  ft_update_unity_launcher (manager);
 }
 
 static void
@@ -571,6 +632,8 @@
                                 TpFileTransferChannel *channel,
                                 EmpathyFTManager *manager)
 {
+  EmpathyFTManagerPriv *priv;
+  priv = GET_PRIV (manager);
   guint64 transferred_bytes, total_bytes;
 
   DEBUG ("Transfer started");
@@ -1078,6 +1141,12 @@
 
   g_hash_table_unref (priv->ft_handler_to_row_ref);
 
+  if (priv->launcher != NULL)
+  {
+    g_object_unref(priv->launcher);
+    priv->launcher = NULL;
+  }
+ 
   G_OBJECT_CLASS (empathy_ft_manager_parent_class)->finalize (object);
 }
 
@@ -1095,6 +1164,8 @@
       g_direct_equal, (GDestroyNotify) g_object_unref,
       (GDestroyNotify) gtk_tree_row_reference_free);
 
+  priv->launcher = unity_launcher_entry_get_for_desktop_id ("empathy.desktop");
+
   ft_manager_build_ui (manager);
 }
 
